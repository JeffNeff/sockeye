{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jeffreynaef/go/src/github.com/n3wscott/sockeye/frontend/src/Filters.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { List, ListSubheader, ListItemText, ListItemIcon, ListItem, InputLabel, MenuItem, TextField, FormControl, Select, Checkbox, Toolbar, Typography, Tooltip, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: theme.spacing(42)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: theme.spacing(42)\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\nconst attributes = [\"specversion\", \"datacontenttype\", \"dataschema\", \"source\", \"type\", \"subject\", \"time\"];\nconst headCells = [{\n  id: \"attr\",\n  label: \"Name\"\n}, {\n  id: \"match\",\n  label: \"Match\"\n}, {\n  id: \"value\",\n  label: \"Value\"\n}];\n\nfunction EnhancedTableHead(props) {\n  const {\n    onSelectAllClick,\n    numSelected,\n    rowCount\n  } = props;\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        padding: \"checkbox\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          indeterminate: numSelected > 0 && numSelected < rowCount,\n          checked: rowCount > 0 && numSelected === rowCount,\n          onChange: onSelectAllClick,\n          inputProps: {\n            \"aria-label\": \"select all filters\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        children: headCell.label\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(0),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === \"light\" ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: \"1 1 100%\",\n    paddingLeft: 8\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  _s();\n\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    children: [numSelected > 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      color: \"inherit\",\n      variant: \"subtitle1\",\n      component: \"div\",\n      children: [numSelected, \" selected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h6\",\n      id: \"tableTitle\",\n      component: \"div\",\n      children: \"Filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), numSelected > 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Delete\",\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"delete\",\n        onClick: props.onDelete,\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EnhancedTableToolbar, \"3YobLOlq21lAjJ1iCLt9G1iGJSo=\", false, function () {\n  return [useToolbarStyles];\n});\n\n_c2 = EnhancedTableToolbar;\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nexport default function Filters(props) {\n  _s2();\n\n  const classes = useStyles();\n  const [selected, setSelected] = React.useState([]);\n  const [filters, setFilters] = React.useState([]);\n  const [filterValue, setFilterValue] = React.useState(\"\");\n  const [filterMatch, setFilterMatch] = React.useState(3);\n\n  const handleChange = event => {\n    setFilterMatch(event.target.value);\n  };\n\n  const handleAdd = event => {\n    let match;\n\n    switch (filterMatch) {\n      case 0:\n        match = \"Exact\";\n        break;\n\n      case 1:\n        match = \"Prefix\";\n        break;\n\n      case 2:\n        match = \"Suffix\";\n        break;\n\n      case 3:\n      default:\n        match = \"Includes\";\n    }\n\n    let attr = inputValue;\n    let val = filterValue;\n\n    if (attr !== \"\" && val !== \"\") {\n      setFilters(og => {\n        const newFilters = [...og.filter(g => {\n          return g.key !== attr;\n        }), {\n          key: attr,\n          attr: attr,\n          match: match,\n          value: val\n        }];\n        props.onChange(event, newFilters);\n        return newFilters;\n      });\n      setFilterMatch(3);\n      setValue(\"\");\n      setInputValue(\"\");\n      setFilterValue(\"\");\n    } else {// TODO: add validation feedback.\n    }\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const handleValChange = event => {\n    setFilterValue(event.target.value);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.attr);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleDelete = event => {\n    let newFilters = filters.filter(f => {\n      return !isSelected(f.attr);\n    });\n    setFilters(newFilters);\n    props.onChange(event, newFilters);\n    setSelected([]);\n  };\n\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const rows = filters;\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n      children: /*#__PURE__*/_jsxDEV(EnhancedTableToolbar, {\n        numSelected: selected.length,\n        onDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n      children: filters.length > 0 && /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            classes: classes,\n            numSelected: selected.length,\n            onSelectAllClick: handleSelectAllClick,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map((row, index) => {\n              const isItemSelected = isSelected(row.attr);\n              const labelId = `enhanced-table-checkbox-${index}`;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                onClick: event => handleClick(event, row.attr),\n                role: \"checkbox\",\n                \"aria-checked\": isItemSelected,\n                tabIndex: -1,\n                selected: isItemSelected,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: isItemSelected,\n                    inputProps: {\n                      \"aria-labelledby\": labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: row.attr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.match\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: row.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this)]\n              }, row.attr, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        freeSolo: true,\n        options: attributes,\n        value: value,\n        onChange: (event, newValue) => {\n          setValue(newValue);\n        },\n        inputValue: inputValue,\n        onInputChange: (event, newInputValue) => {\n          setInputValue(newInputValue);\n        },\n        renderInput: params => /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"input-filter-attribute\",\n            ...params,\n            label: \"Attribute\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"Match\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: filterMatch,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 0,\n            children: \"Exact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 1,\n            children: \"Prefix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 2,\n            children: \"Suffix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 3,\n            children: \"Includes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"input-filter-value\",\n          label: \"Value\",\n          value: filterValue,\n          onChange: handleValChange,\n          type: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      onClick: handleAdd,\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: \"Add Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          children: /*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n            classes: classes,\n            numSelected: selected.length,\n            onSelectAllClick: handleSelectAllClick,\n            rowCount: rows.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Filters, \"XhnRgPxSYn8acA6AOb4RmxYI+3s=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Filters;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");\n$RefreshReg$(_c2, \"EnhancedTableToolbar\");\n$RefreshReg$(_c3, \"Filters\");","map":{"version":3,"sources":["/Users/jeffreynaef/go/src/github.com/n3wscott/sockeye/frontend/src/Filters.js"],"names":["React","lighten","makeStyles","clsx","PropTypes","AddIcon","List","ListSubheader","ListItemText","ListItemIcon","ListItem","InputLabel","MenuItem","TextField","FormControl","Select","Checkbox","Toolbar","Typography","Tooltip","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Autocomplete","DeleteIcon","useStyles","theme","table","minWidth","spacing","formControl","margin","selectEmpty","marginTop","attributes","headCells","id","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","map","headCell","useToolbarStyles","root","paddingLeft","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","classes","onDelete","propTypes","number","isRequired","Filters","selected","setSelected","useState","filters","setFilters","filterValue","setFilterValue","filterMatch","setFilterMatch","handleChange","event","target","value","handleAdd","match","attr","inputValue","val","og","newFilters","filter","g","key","onChange","setValue","setInputValue","isSelected","name","indexOf","handleValChange","handleSelectAllClick","checked","newSelecteds","rows","n","handleClick","selectedIndex","newSelected","concat","slice","length","handleDelete","f","row","index","isItemSelected","labelId","newValue","newInputValue","params"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport {\n  List,\n  ListSubheader,\n  ListItemText,\n  ListItemIcon,\n  ListItem,\n  InputLabel,\n  MenuItem,\n  TextField,\n  FormControl,\n  Select,\n  Checkbox,\n  Toolbar,\n  Typography,\n  Tooltip,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: theme.spacing(42),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: theme.spacing(42),\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst attributes = [\n  \"specversion\",\n  \"datacontenttype\",\n  \"dataschema\",\n  \"source\",\n  \"type\",\n  \"subject\",\n  \"time\",\n];\n\nconst headCells = [\n  { id: \"attr\", label: \"Name\" },\n  { id: \"match\", label: \"Match\" },\n  { id: \"value\", label: \"Value\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const { onSelectAllClick, numSelected, rowCount } = props;\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all filters\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell key={headCell.id}>{headCell.label}</TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(0),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n    paddingLeft: 8,\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Filters\n        </Typography>\n      )}\n\n      {numSelected > 0 && (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\" onClick={props.onDelete}>\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nexport default function Filters(props) {\n  const classes = useStyles();\n\n  const [selected, setSelected] = React.useState([]);\n\n  const [filters, setFilters] = React.useState([]);\n\n  const [filterValue, setFilterValue] = React.useState(\"\");\n  const [filterMatch, setFilterMatch] = React.useState(3);\n\n  const handleChange = (event) => {\n    setFilterMatch(event.target.value);\n  };\n\n  const handleAdd = (event) => {\n    let match;\n    switch (filterMatch) {\n      case 0:\n        match = \"Exact\";\n        break;\n      case 1:\n        match = \"Prefix\";\n        break;\n      case 2:\n        match = \"Suffix\";\n        break;\n      case 3:\n      default:\n        match = \"Includes\";\n    }\n    let attr = inputValue;\n    let val = filterValue;\n    if (attr !== \"\" && val !== \"\") {\n      setFilters((og) => {\n        const newFilters = [\n          ...og.filter((g) => {\n            return g.key !== attr;\n          }),\n          { key: attr, attr: attr, match: match, value: val },\n        ];\n\n        props.onChange(event, newFilters);\n\n        return newFilters;\n      });\n\n      setFilterMatch(3);\n      setValue(\"\");\n      setInputValue(\"\");\n      setFilterValue(\"\");\n    } else {\n      // TODO: add validation feedback.\n    }\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const handleValChange = (event) => {\n    setFilterValue(event.target.value);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.attr);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleDelete = (event) => {\n    let newFilters = filters.filter((f) => {\n      return !isSelected(f.attr);\n    });\n\n    setFilters(newFilters);\n    props.onChange(event, newFilters);\n\n    setSelected([]);\n  };\n\n  const [value, setValue] = React.useState(\"\");\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  const rows = filters;\n\n  return (\n    <List>\n      <ListSubheader>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          onDelete={handleDelete}\n        />\n      </ListSubheader>\n      <ListItem>\n        {filters.length > 0 && (\n          <TableContainer component={Paper}>\n            <Table className={classes.table}>\n              <EnhancedTableHead\n                classes={classes}\n                numSelected={selected.length}\n                onSelectAllClick={handleSelectAllClick}\n                rowCount={rows.length}\n              />\n              <TableBody>\n                {rows.map((row, index) => {\n                  const isItemSelected = isSelected(row.attr);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.attr)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.attr}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.attr}\n                      </TableCell>\n                      <TableCell>{row.match}</TableCell>\n                      <TableCell>{row.value}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        )}\n      </ListItem>\n      <ListItem>\n        <Autocomplete\n          freeSolo\n          options={attributes}\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n          inputValue={inputValue}\n          onInputChange={(event, newInputValue) => {\n            setInputValue(newInputValue);\n          }}\n          renderInput={(params) => (\n            <FormControl className={classes.formControl}>\n              <TextField\n                id=\"input-filter-attribute\"\n                {...params}\n                label=\"Attribute\"\n              />\n            </FormControl>\n          )}\n        />\n      </ListItem>\n      <ListItem>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"demo-simple-select-label\">Match</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={filterMatch}\n            onChange={handleChange}\n          >\n            <MenuItem value={0}>Exact</MenuItem>\n            <MenuItem value={1}>Prefix</MenuItem>\n            <MenuItem value={2}>Suffix</MenuItem>\n            <MenuItem value={3}>Includes</MenuItem>\n          </Select>\n        </FormControl>\n      </ListItem>\n      <ListItem>\n        <FormControl className={classes.formControl}>\n          <TextField\n            id=\"input-filter-value\"\n            label=\"Value\"\n            value={filterValue}\n            onChange={handleValChange}\n            type=\"search\"\n          />\n        </FormControl>\n      </ListItem>\n      <ListItem button onClick={handleAdd}>\n        <ListItemIcon>\n          <AddIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Add Filter\" />\n      </ListItem>\n      <ListItem>\n        <TableContainer component={Paper}>\n          <Table className={classes.table}>\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              onSelectAllClick={handleSelectAllClick}\n              rowCount={rows.length}\n            />\n          </Table>\n        </TableContainer>\n      </ListItem>\n    </List>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}