{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jeffreynaef/go/src/github.com/n3wscott/sockeye/frontend/src/Attributes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\nconst CssTextField = withStyles({\n  root: {\n    \"& label\": {\n      color: \"green\"\n    },\n    \"& .MuiInput-underline:before\": {\n      borderBottomColor: \"lightgray\"\n    },\n    \"& .MuiInputBase-input\": {\n      padding: 0,\n      width: \"100%\"\n    }\n  }\n})(TextField);\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  margin: {\n    padding: 0,\n    margin: 4\n  },\n  list: {\n    \"list-style-type\": \"none\",\n    \"padding-inline-start\": 0,\n    \"width\": \"100%\"\n  }\n}));\nexport default function CustomizedInputs(props) {\n  _s();\n\n  const classes = useStyles();\n  let rows = [];\n  let specVersion = \"??\";\n  let dataContentType = \"unknown\";\n  Object.keys(props.item).forEach(key => {\n    if (key === \"data\" || key === \"data_base64\" || key === \"key\") {\n      return;\n    }\n\n    if (key === \"specversion\") {\n      specVersion = props.item[key];\n      return;\n    }\n\n    if (key === \"datacontenttype\") {\n      dataContentType = props.item[key];\n      return;\n    }\n\n    rows.push({\n      \"key\": key,\n      \"value\": props.item[key]\n    });\n  });\n  rows.sort(function (a, b) {\n    if (a.key < b.key) {\n      return -1;\n    }\n\n    if (a.key > b.key) {\n      return 1;\n    } // a must be equal to b\n\n\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          variant: \"outlined\",\n          color: \"lightgray\",\n          size: \"small\",\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: specVersion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 75\n          }, this),\n          label: dataContentType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), rows.map(row => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(CssTextField, {\n          fullWidth: true,\n          className: classes.margin,\n          value: row.value,\n          label: row.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomizedInputs, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomizedInputs;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedInputs\");","map":{"version":3,"sources":["/Users/jeffreynaef/go/src/github.com/n3wscott/sockeye/frontend/src/Attributes.js"],"names":["React","withStyles","makeStyles","TextField","Chip","Avatar","CssTextField","root","color","borderBottomColor","padding","width","useStyles","theme","display","flexWrap","margin","list","CustomizedInputs","props","classes","rows","specVersion","dataContentType","Object","keys","item","forEach","key","push","sort","a","b","map","row","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  withStyles,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst CssTextField = withStyles({\n  root: {\n    \"& label\": {\n      color: \"green\"\n    },\n    \"& .MuiInput-underline:before\": {\n      borderBottomColor: \"lightgray\"\n    },\n    \"& .MuiInputBase-input\": {\n      padding: 0,\n      width: \"100%\"\n    }\n  }\n})(TextField);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  margin: {\n    padding: 0,\n    margin: 4\n  },\n  list: {\n    \"list-style-type\": \"none\",\n    \"padding-inline-start\": 0,\n    \"width\": \"100%\",\n  }\n}));\n\nexport default function CustomizedInputs(props) {\n  const classes = useStyles();\n\n  let rows = [];\n\n  let specVersion = \"??\";\n  let dataContentType = \"unknown\";\n\n  Object.keys(props.item).forEach(key => {\n    if (key === \"data\" || key === \"data_base64\" || key === \"key\") {\n      return;\n    }\n    if (key === \"specversion\") {\n      specVersion = props.item[key];\n      return\n    }\n    if (key === \"datacontenttype\") {\n      dataContentType = props.item[key];\n      return\n    }\n    rows.push({\"key\":key, \"value\":props.item[key]});\n  });\n\n  rows.sort(function(a, b) {\n    if (a.key < b.key) {\n      return -1;\n    }\n    if (a.key > b.key) {\n      return 1;\n    }\n    // a must be equal to b\n    return 0;\n  });\n\n  return (\n    <form className={classes.root} noValidate>\n      <ul className={classes.list}>\n        <li>\n          <Chip variant=\"outlined\" color=\"lightgray\" size=\"small\" avatar={<Avatar>{specVersion}</Avatar>} label={dataContentType}/>\n        </li>\n        {rows.map((row) => (\n        <li>\n        <CssTextField fullWidth\n          className={classes.margin}\n          value={row.value}\n          label={row.key}\n        />\n        </li>\n      ))}\n      </ul>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}