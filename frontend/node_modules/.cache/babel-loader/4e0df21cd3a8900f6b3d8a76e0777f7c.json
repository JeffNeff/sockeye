{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeffreynaef/go/src/github.com/n3wscott/sockeye/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport \"./App.css\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nconst axios = require(\"axios\");\n\nconst corsOptions = {\n  origin: \"*\"\n};\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchServices = () => {\n      axios.post(\"/queryservices\", {}, corsOptions).then(response => {\n        console.log(response.data);\n        this.setState({\n          destinations: response.data\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      events: [],\n      destinations: [],\n      revert: false,\n      open: false\n    };\n  }\n\n  handleRevert(e) {\n    this.setState({\n      revert: !this.state.revert\n    });\n    this.setState({\n      events: this.state.events.reverse()\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"Protocol: \" + window.location.protocol);\n    let wsURL = \"ws://\" + document.location.host + \"/ws\";\n\n    if (window.location.protocol === \"https:\") {\n      wsURL = \"wss://\" + document.location.host + \"/ws\";\n    }\n\n    console.log(\"WS URL: \" + wsURL);\n    this.fetchServices();\n    let that = this;\n    let sock = new ReconnectingWebSocket(wsURL);\n\n    sock.onopen = function () {\n      console.log(\"connected to \" + wsURL); //let fab = document.getElementById(\"fab\");\n      //fab.setAttribute(\"sockeye-connected\", \"true\");\n    };\n\n    sock.onclose = function (e) {\n      console.log(\"connection closed (\" + e.code + \")\"); //fab.setAttribute(\"sockeye-connected\", \"false\");\n    };\n\n    sock.onmessage = function (e) {\n      window.dispatchEvent(new Event(\"cloudevent\"));\n      let t = JSON.parse(JSON.parse(e.data)); // at the moment the ws sends down a double encoded thing.\n\n      console.log(t);\n      that.onCloudEvent(t);\n    };\n  }\n\n  onCloudEvent(event) {\n    let data = {\n      id: event.id\n    };\n    Object.keys(event).forEach(key => {\n      if (key === \"data\") {\n        data[key] = JSON.stringify(event[key]);\n        return;\n      }\n\n      data[key] = event[key];\n    });\n    let al = [...this.state.events];\n\n    if (this.state.revert) {\n      if (data[\"data\"] != null) {\n        al.push(data);\n        this.setState({\n          events: al.reverse()\n        });\n        return;\n      }\n\n      if (data[\"data\"] === undefined) {\n        this.showError();\n        console.log(\"More information on the invalid event: \", event);\n        return;\n      }\n    }\n\n    if (!this.state.revert) {\n      if (data[\"data\"] != null) {\n        al.push(data);\n        this.setState({\n          events: al\n        });\n        return;\n      }\n\n      if (data[\"data\"] === undefined) {\n        this.showError();\n        console.log(\"More information on the invalid event: \", event);\n        return;\n      }\n    }\n  }\n\n  showError() {\n    this.setState({\n      open: !this.state.open\n    });\n  }\n\n  render() {\n    const events = this.state.events;\n    const destinations = this.state.destinations;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Dashboard, {\n        items: events,\n        destinations: destinations,\n        revert: () => this.handleRevert()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: this.state.open,\n        autoHideDuration: 6000,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: \"Event received with an invalid or missing data payload. Check the console for more information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/jeffreynaef/go/src/github.com/n3wscott/sockeye/frontend/src/App.js"],"names":["React","Component","Dashboard","ReconnectingWebSocket","Alert","Snackbar","axios","require","corsOptions","origin","App","constructor","props","fetchServices","post","then","response","console","log","data","setState","destinations","catch","error","state","events","revert","open","handleRevert","e","reverse","componentDidMount","window","location","protocol","wsURL","document","host","that","sock","onopen","onclose","code","onmessage","dispatchEvent","Event","t","JSON","parse","onCloudEvent","event","id","Object","keys","forEach","key","stringify","al","push","undefined","showError","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,WAAP;AACA,OAAOC,qBAAP,MAAkC,wBAAlC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAGA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,MAAM,EAAE;AADU,CAApB;AAIA,OAAO,MAAMC,GAAN,SAAkBT,SAAlB,CAA4B;AACjCU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,aAVmB,GAUH,MAAM;AACpBP,MAAAA,KAAK,CACFQ,IADH,CACQ,gBADR,EACyB,EADzB,EAC4BN,WAD5B,EAEGO,IAFH,CAESC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACE,aAAKC,QAAL,CAAc;AAACC,UAAAA,YAAY,EAACL,QAAQ,CAACG;AAAvB,SAAd;AACH,OALH,EAMGG,KANH,CAMUC,KAAD,IAAW;AAChBN,QAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD,OARH;AASC,KApBgB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXJ,MAAAA,YAAY,EAAE,EAFH;AAGXK,MAAAA,MAAM,EAAE,KAHG;AAIXC,MAAAA,IAAI,EAAE;AAJK,KAAb;AAMD;;AAaDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,SAAKT,QAAL,CAAc;AAAEM,MAAAA,MAAM,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAAtB,KAAd;AACA,SAAKN,QAAL,CAAc;AACZK,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAAX,CAAkBK,OAAlB;AADI,KAAd;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBd,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAec,MAAM,CAACC,QAAP,CAAgBC,QAA3C;AACA,QAAIC,KAAK,GAAG,UAAUC,QAAQ,CAACH,QAAT,CAAkBI,IAA5B,GAAmC,KAA/C;;AACA,QAAIL,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,QAAjC,EAA2C;AACzCC,MAAAA,KAAK,GAAG,WAAWC,QAAQ,CAACH,QAAT,CAAkBI,IAA7B,GAAoC,KAA5C;AACD;;AAGDpB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaiB,KAAzB;AAEA,SAAKtB,aAAL;AAEA,QAAIyB,IAAI,GAAG,IAAX;AAEA,QAAIC,IAAI,GAAG,IAAIpC,qBAAJ,CAA0BgC,KAA1B,CAAX;;AACAI,IAAAA,IAAI,CAACC,MAAL,GAAc,YAAY;AACxBvB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBiB,KAA9B,EADwB,CAExB;AACA;AACD,KAJD;;AAKAI,IAAAA,IAAI,CAACE,OAAL,GAAe,UAAUZ,CAAV,EAAa;AAC1BZ,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBW,CAAC,CAACa,IAA1B,GAAiC,GAA7C,EAD0B,CAE1B;AACD,KAHD;;AAIAH,IAAAA,IAAI,CAACI,SAAL,GAAiB,UAAUd,CAAV,EAAa;AAC5BG,MAAAA,MAAM,CAACY,aAAP,CAAqB,IAAIC,KAAJ,CAAU,YAAV,CAArB;AACA,UAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACC,KAAL,CAAWnB,CAAC,CAACV,IAAb,CAAX,CAAR,CAF4B,CAEY;;AAExCF,MAAAA,OAAO,CAACC,GAAR,CAAY4B,CAAZ;AACAR,MAAAA,IAAI,CAACW,YAAL,CAAkBH,CAAlB;AACD,KAND;AASD;;AAEDG,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClB,QAAI/B,IAAI,GAAG;AAAEgC,MAAAA,EAAE,EAAED,KAAK,CAACC;AAAZ,KAAX;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA4BC,GAAD,IAAS;AAClC,UAAIA,GAAG,KAAK,MAAZ,EAAoB;AAClBpC,QAAAA,IAAI,CAACoC,GAAD,CAAJ,GAAYR,IAAI,CAACS,SAAL,CAAeN,KAAK,CAACK,GAAD,CAApB,CAAZ;AACA;AACD;;AACDpC,MAAAA,IAAI,CAACoC,GAAD,CAAJ,GAAYL,KAAK,CAACK,GAAD,CAAjB;AACD,KAND;AAQA,QAAIE,EAAE,GAAG,CAAC,GAAG,KAAKjC,KAAL,CAAWC,MAAf,CAAT;;AAEA,QAAI,KAAKD,KAAL,CAAWE,MAAf,EAAuB;AACrB,UAAIP,IAAI,CAAC,MAAD,CAAJ,IAAgB,IAApB,EAA0B;AACxBsC,QAAAA,EAAE,CAACC,IAAH,CAAQvC,IAAR;AACA,aAAKC,QAAL,CAAc;AACZK,UAAAA,MAAM,EAAEgC,EAAE,CAAC3B,OAAH;AADI,SAAd;AAGA;AACD;;AACD,UAAIX,IAAI,CAAC,MAAD,CAAJ,KAAiBwC,SAArB,EAAgC;AAC9B,aAAKC,SAAL;AACA3C,QAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDgC,KAAvD;AACA;AACD;AAEF;;AAED,QAAI,CAAC,KAAK1B,KAAL,CAAWE,MAAhB,EAAwB;AACtB,UAAIP,IAAI,CAAC,MAAD,CAAJ,IAAgB,IAApB,EAA0B;AACxBsC,QAAAA,EAAE,CAACC,IAAH,CAAQvC,IAAR;AACA,aAAKC,QAAL,CAAc;AACZK,UAAAA,MAAM,EAAEgC;AADI,SAAd;AAGA;AACD;;AACD,UAAItC,IAAI,CAAC,MAAD,CAAJ,KAAiBwC,SAArB,EAAgC;AAC9B,aAAKC,SAAL;AACA3C,QAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDgC,KAAvD;AACA;AACD;AAGF;AACF;;AAGCU,EAAAA,SAAS,GAAG;AACV,SAAKxC,QAAL,CAAc;AAAEO,MAAAA,IAAI,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAApB,KAAd;AACD;;AAIHkC,EAAAA,MAAM,GAAG;AACP,UAAMpC,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B;AACA,UAAMJ,YAAY,GAAG,KAAKG,KAAL,CAAWH,YAAhC;AAEA,wBACE;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEI,MAAlB;AAA0B,QAAA,YAAY,EAAEJ,YAAxC;AAAuD,QAAA,MAAM,EAAE,MAAM,KAAKO,YAAL;AAArE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWG,IAA3B;AAAiC,QAAA,gBAAgB,EAAE,IAAnD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AApIgC;AAuInC,eAAejB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport \"./App.css\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\nimport Alert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nconst axios = require(\"axios\");\n\n\nconst corsOptions = {\n  origin: \"*\",\n};\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: [],\n      destinations: [],\n      revert: false,\n      open: false,\n    };\n  }\n\n  fetchServices = () => {\n    axios\n      .post(\"/queryservices\",{},corsOptions)\n      .then((response) => {\n        console.log(response.data);\n          this.setState({destinations:response.data});\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    }\n  handleRevert(e) {\n    this.setState({ revert: !this.state.revert })\n    this.setState({\n      events: this.state.events.reverse()\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"Protocol: \" + window.location.protocol);\n    let wsURL = \"ws://\" + document.location.host + \"/ws\";\n    if (window.location.protocol === \"https:\") {\n      wsURL = \"wss://\" + document.location.host + \"/ws\";\n    }\n\n\n    console.log(\"WS URL: \" + wsURL);\n\n    this.fetchServices();\n\n    let that = this;\n\n    let sock = new ReconnectingWebSocket(wsURL);\n    sock.onopen = function () {\n      console.log(\"connected to \" + wsURL);\n      //let fab = document.getElementById(\"fab\");\n      //fab.setAttribute(\"sockeye-connected\", \"true\");\n    };\n    sock.onclose = function (e) {\n      console.log(\"connection closed (\" + e.code + \")\");\n      //fab.setAttribute(\"sockeye-connected\", \"false\");\n    };\n    sock.onmessage = function (e) {\n      window.dispatchEvent(new Event(\"cloudevent\"));\n      let t = JSON.parse(JSON.parse(e.data)); // at the moment the ws sends down a double encoded thing.\n\n      console.log(t);\n      that.onCloudEvent(t);\n    };\n\n    \n  }\n\n  onCloudEvent(event) {\n    let data = { id: event.id };\n\n    Object.keys(event).forEach((key) => {\n      if (key === \"data\") {\n        data[key] = JSON.stringify(event[key]);\n        return;\n      }\n      data[key] = event[key];\n    });\n\n    let al = [...this.state.events];\n\n    if (this.state.revert) {\n      if (data[\"data\"] != null) {\n        al.push(data);\n        this.setState({\n          events: al.reverse()\n        });\n        return;\n      }\n      if (data[\"data\"] === undefined) {\n        this.showError();\n        console.log(\"More information on the invalid event: \", event);\n        return;\n      }\n\n    } \n    \n    if (!this.state.revert) {\n      if (data[\"data\"] != null) {\n        al.push(data);\n        this.setState({\n          events: al\n        });\n        return;\n      }\n      if (data[\"data\"] === undefined) {\n        this.showError();\n        console.log(\"More information on the invalid event: \", event);\n        return;\n      }\n\n\n    }\n  }\n\n\n    showError() {\n      this.setState({ open: !this.state.open });\n    }\n\n\n\n  render() {\n    const events = this.state.events;\n    const destinations = this.state.destinations;\n\n    return (\n      <div>\n        <Dashboard items={events} destinations={destinations}  revert={() => this.handleRevert()} />\n        <Snackbar open={this.state.open} autoHideDuration={6000} >\n          <Alert severity=\"error\">\n            Event received with an invalid or missing data payload. Check the console for more information\n          </Alert>\n        </Snackbar>\n      </div >\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}