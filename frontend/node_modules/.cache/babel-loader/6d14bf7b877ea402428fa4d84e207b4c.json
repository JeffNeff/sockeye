{"ast":null,"code":"import _slicedToArray from\"/Users/jeffreynaef/.config/yarn/global/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{lighten,makeStyles}from\"@material-ui/core/styles\";import Typography from\"@material-ui/core/Typography\";import Select from\"@material-ui/core/Select\";import{MenuItem,TextField,TableRow,FormControl,Button,TableBody}from\"@material-ui/core\";import{TextArea}from\"grommet\";var axios=require(\"axios\");export default function Injection(props){var destinations=props.destinations;var dest=props.destination;var _React$useState=React.useState(\"0123211\"),_React$useState2=_slicedToArray(_React$useState,2),id=_React$useState2[0],setID=_React$useState2[1];var _React$useState3=React.useState(\"test.type\"),_React$useState4=_slicedToArray(_React$useState3,2),type=_React$useState4[0],setType=_React$useState4[1];var _React$useState5=React.useState(\"test.source\"),_React$useState6=_slicedToArray(_React$useState5,2),source=_React$useState6[0],setSource=_React$useState6[1];var _React$useState7=React.useState(\"application/json\"),_React$useState8=_slicedToArray(_React$useState7,2),contenttype=_React$useState8[0],setContenttype=_React$useState8[1];var _React$useState9=React.useState('{\"test\":\"data\"}'),_React$useState10=_slicedToArray(_React$useState9,2),data=_React$useState10[0],setData=_React$useState10[1];var _React$useState11=React.useState(dest),_React$useState12=_slicedToArray(_React$useState11,2),destination=_React$useState12[0],setDestination=_React$useState12[1];var divStyle={width:\"380px\"};var corsOptions={origin:\"*\"};var useToolbarStyles=makeStyles(function(theme){return{root:{paddingLeft:theme.spacing(0),paddingRight:theme.spacing(1)},highlight:theme.palette.type===\"light\"?{color:theme.palette.secondary.main,backgroundColor:lighten(theme.palette.secondary.light,0.85)}:{color:theme.palette.text.primary,backgroundColor:theme.palette.secondary.dark},title:{flex:\"1 1 100%\",paddingLeft:8}};});var classes=useToolbarStyles();var handleInjection=function handleInjection(event){axios.post(\"/inject\",{destination:destination,data:data,headers:{\"Ce-Id\":id,\"Ce-Specversion\":\"1.0\",\"Ce-Type\":type,\"Ce-Source\":source,\"Content-Type\":contenttype}},corsOptions).then(function(response){console.log(response);}).catch(function(error){console.log(error);});};return/*#__PURE__*/React.createElement(TableBody,null,/*#__PURE__*/React.createElement(Typography,{className:classes.title,variant:\"h6\",id:\"tableTitle\",component:\"div\"},\"Injection\"),\"ID:\",/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(FormControl,{style:divStyle},/*#__PURE__*/React.createElement(TextField,{id:\"input-injection-ceid\",value:id,onChange:function onChange(e){return setID(e.target.value);}}))),\"Type:\",/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(FormControl,{style:divStyle},/*#__PURE__*/React.createElement(TextField,{id:\"input-injection-type\",value:type,onChange:function onChange(e){return setType(e.target.value);}}))),\"Source:\",/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(FormControl,{style:divStyle},/*#__PURE__*/React.createElement(TextField,{id:\"input-injection-source\",value:source,onChange:function onChange(e){return setSource(e.target.value);}}))),\"Content-Type:\",/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(FormControl,{style:divStyle},/*#__PURE__*/React.createElement(TextField,{id:\"input-injection-contenttype\",value:contenttype,onChange:function onChange(e){return setContenttype(e.target.value);}}))),\"Avalible Destinations:\",/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(FormControl,{style:divStyle},/*#__PURE__*/React.createElement(Select// value={destination}\n,{onChange:function onChange(e){return setDestination(e.target.value);}},destinations.map(function(data,index){return/*#__PURE__*/React.createElement(MenuItem,{value:data},data);})))),\"Custom Destination:\",/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(FormControl,{style:divStyle},/*#__PURE__*/React.createElement(TextField,{id:\"input-injection-add\"// value={destination}\n,onChange:function onChange(e){return setDestination(e.target.value);}}))),\"Data:\",/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(FormControl,{style:divStyle},/*#__PURE__*/React.createElement(TextArea,{id:\"input-injection-data\",value:data,onChange:function onChange(e){return setData(e.target.value);}}))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(FormControl,{style:divStyle},/*#__PURE__*/React.createElement(Button,{id:\"input-injection-button\",label:\"Submit\",onClick:handleInjection},\"Send\"))));}","map":{"version":3,"sources":["/Users/jeffreynaef/go/src/github.com/n3wscott/sockeye/frontend/src/Injection.js"],"names":["React","lighten","makeStyles","Typography","Select","MenuItem","TextField","TableRow","FormControl","Button","TableBody","TextArea","axios","require","Injection","props","destinations","dest","destination","useState","id","setID","type","setType","source","setSource","contenttype","setContenttype","data","setData","setDestination","divStyle","width","corsOptions","origin","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","classes","handleInjection","event","post","headers","then","response","console","log","catch","error","e","target","value","map","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Select from \"@material-ui/core/Select\";\nimport {MenuItem,TextField,TableRow,FormControl,Button, TableBody} from \"@material-ui/core\";\nimport { TextArea } from \"grommet\";\nconst axios = require(\"axios\");\n\n\nexport default function Injection(props) {\n  const destinations = props.destinations;\n  const dest = props.destination;\n\n  const [id, setID] = React.useState(\"0123211\");\n  const [type, setType] = React.useState(\"test.type\");\n  const [source, setSource] = React.useState(\"test.source\");\n  const [contenttype, setContenttype] = React.useState(\"application/json\");\n  const [data, setData] = React.useState('{\"test\":\"data\"}');\n  const [destination, setDestination] = React.useState(dest);\n\n  const divStyle = {\n    width: \"380px\",\n  };\n\n  const corsOptions = {\n    origin: \"*\",\n  };\n\n  const useToolbarStyles = makeStyles((theme) => ({\n    root: {\n      paddingLeft: theme.spacing(0),\n      paddingRight: theme.spacing(1),\n    },\n    highlight:\n      theme.palette.type === \"light\"\n        ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n        : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n    title: {\n      flex: \"1 1 100%\",\n      paddingLeft: 8,\n    },\n  }));\n\n  const classes = useToolbarStyles();\n\n\n  const handleInjection = (event) => {\n    axios\n      .post(\n        \"/inject\",\n        {\n          destination,\n          data,\n          headers: {\n            \"Ce-Id\": id,\n            \"Ce-Specversion\": \"1.0\",\n            \"Ce-Type\": type,\n            \"Ce-Source\": source,\n            \"Content-Type\": contenttype,\n          },\n        },\n        corsOptions\n      )\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <TableBody>\n      <Typography\n        className={classes.title}\n        variant=\"h6\"\n        id=\"tableTitle\"\n        component=\"div\"\n      >\n        Injection\n      </Typography>\n      ID:\n      <TableRow>\n        <FormControl style={divStyle}>\n          <TextField\n            id=\"input-injection-ceid\"\n            value={id}\n            onChange={(e) => setID(e.target.value)}\n          />\n        </FormControl>\n      </TableRow>\n      Type:\n      <TableRow>\n        <FormControl style={divStyle}>\n          <TextField\n            id=\"input-injection-type\"\n            value={type}\n            onChange={(e) => setType(e.target.value)}\n          />\n        </FormControl>\n      </TableRow>\n      Source:\n      <TableRow>\n        <FormControl style={divStyle}>\n          <TextField\n            id=\"input-injection-source\"\n            value={source}\n            onChange={(e) => setSource(e.target.value)}\n          />\n        </FormControl>\n      </TableRow>\n      Content-Type:\n      <TableRow>\n        <FormControl style={divStyle}>\n          <TextField\n            id=\"input-injection-contenttype\"\n            value={contenttype}\n            onChange={(e) => setContenttype(e.target.value)}\n          />\n        </FormControl>\n      </TableRow>\n      Avalible Destinations:\n      <TableRow>\n        <FormControl style={divStyle}>\n          <Select\n            // value={destination}\n            onChange={(e) => setDestination(e.target.value)}\n          >\n            {destinations.map((data, index) => (\n              <MenuItem value={data}>{data}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </TableRow>\n      Custom Destination:\n      <TableRow>\n        <FormControl style={divStyle}>\n          <TextField\n            id=\"input-injection-add\"\n            // value={destination}\n            onChange={(e) => setDestination(e.target.value)}\n          />\n        </FormControl>\n      </TableRow>\n      Data:\n      <TableRow>\n        <FormControl style={divStyle}>\n          <TextArea\n            id=\"input-injection-data\"\n            value={data}\n            onChange={(e) => setData(e.target.value)}\n          />\n        </FormControl>\n      </TableRow>\n      <TableRow>\n        <FormControl style={divStyle}>\n          <Button\n            id=\"input-injection-button\"\n            label=\"Submit\"\n            onClick={handleInjection}\n          >\n            Send\n          </Button>\n        </FormControl>\n      </TableRow>\n    </TableBody>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}